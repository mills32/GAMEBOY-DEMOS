                              1 ;--------------------------------------------------------
                              2 ; File Created by SDCC : free open source ANSI-C Compiler
                              3 ; Version 3.6.0 #9615 (MINGW32)
                              4 ;--------------------------------------------------------
                              5 	.module _memcpy
                              6 	.optsdcc -mgbz80
                              7 	
                              8 ;--------------------------------------------------------
                              9 ; Public variables in this module
                             10 ;--------------------------------------------------------
                             11 	.globl _memcpy
                             12 ;--------------------------------------------------------
                             13 ; ram data
                             14 ;--------------------------------------------------------
                             15 	.area _DATA
                             16 ;--------------------------------------------------------
                             17 ; absolute external ram data
                             18 ;--------------------------------------------------------
                             19 	.area _DABS (ABS)
                             20 ;--------------------------------------------------------
                             21 ; global & static initialisations
                             22 ;--------------------------------------------------------
                             23 	.area _HOME
                             24 	.area _GSINIT
                             25 	.area _GSFINAL
                             26 	.area _GSINIT
                             27 ;--------------------------------------------------------
                             28 ; Home
                             29 ;--------------------------------------------------------
                             30 	.area _HOME
                             31 	.area _HOME
                             32 ;--------------------------------------------------------
                             33 ; code
                             34 ;--------------------------------------------------------
                             35 	.area _CODE
                             36 ;C:/gbdk/ZGB/common/src/_memcpy.c:36: void * memcpy (void * dst, const void * src, size_t acount)
                             37 ;	---------------------------------
                             38 ; Function memcpy
                             39 ; ---------------------------------
   0000                      40 _memcpy::
   0000 E8 F8                41 	add	sp, #-8
                             42 ;C:/gbdk/ZGB/common/src/_memcpy.c:38: void * ret = dst;
   0002 F8 0A                43 	ldhl	sp,#10
   0004 2A                   44 	ld	a,(hl+)
   0005 5E                   45 	ld	e, (hl)
   0006 F8 00                46 	ldhl	sp,#0
   0008 22                   47 	ld	(hl+),a
   0009 73                   48 	ld	(hl),e
                             49 ;C:/gbdk/ZGB/common/src/_memcpy.c:39: char * d = dst;
   000A F8 0A                50 	ldhl	sp,#10
   000C 2A                   51 	ld	a,(hl+)
   000D 5E                   52 	ld	e, (hl)
   000E F8 06                53 	ldhl	sp,#6
   0010 22                   54 	ld	(hl+),a
   0011 73                   55 	ld	(hl),e
                             56 ;C:/gbdk/ZGB/common/src/_memcpy.c:40: const char * s = src;
   0012 F8 0C                57 	ldhl	sp,#12
   0014 2A                   58 	ld	a,(hl+)
   0015 5E                   59 	ld	e, (hl)
   0016 F8 04                60 	ldhl	sp,#4
   0018 22                   61 	ld	(hl+),a
   0019 73                   62 	ld	(hl),e
                             63 ;C:/gbdk/ZGB/common/src/_memcpy.c:45: while (acount--) {
   001A F8 0E                64 	ldhl	sp,#(15 - 1)
   001C 4E                   65 	ld	c,(hl)
   001D 23                   66 	inc	hl
   001E 46                   67 	ld	b,(hl)
   001F                      68 00101$:
   001F F8 02                69 	ldhl	sp,#2
   0021 71                   70 	ld	(hl),c
   0022 23                   71 	inc	hl
   0023 70                   72 	ld	(hl),b
   0024 0B                   73 	dec	bc
   0025 3A                   74 	ld	a,(hl-)
   0026 B6                   75 	or	a,(hl)
   0027 28 1A                76 	jr	Z,00103$
                             77 ;C:/gbdk/ZGB/common/src/_memcpy.c:46: *d++ = *s++;
   0029 F8 04                78 	ldhl	sp,#(5 - 1)
   002B 5E                   79 	ld	e,(hl)
   002C 23                   80 	inc	hl
   002D 56                   81 	ld	d,(hl)
   002E 1A                   82 	ld	a,(de)
   002F 2B                   83 	dec	hl
   0030 34                   84 	inc	(hl)
   0031 20 02                85 	jr	NZ,00115$
   0033 23                   86 	inc	hl
   0034 34                   87 	inc	(hl)
   0035                      88 00115$:
   0035 F8 06                89 	ldhl	sp,#(7 - 1)
   0037 5E                   90 	ld	e,(hl)
   0038 23                   91 	inc	hl
   0039 56                   92 	ld	d,(hl)
   003A 12                   93 	ld	(de),a
   003B 2B                   94 	dec	hl
   003C 34                   95 	inc	(hl)
   003D 20 E0                96 	jr	NZ,00101$
   003F 23                   97 	inc	hl
   0040 34                   98 	inc	(hl)
   0041 18 DC                99 	jr	00101$
   0043                     100 00103$:
                            101 ;C:/gbdk/ZGB/common/src/_memcpy.c:49: return(ret);
   0043 D1                  102 	pop	de
   0044 D5                  103 	push	de
   0045 E8 08               104 	add	sp, #8
   0047 C9                  105 	ret
                            106 	.area _CODE
                            107 	.area _CABS (ABS)
